{"version":3,"sources":["meteor://ðŸ’»app/collections/dcdc.js","meteor://ðŸ’»app/collections/dps.js","meteor://ðŸ’»app/server/main.js"],"names":[],"mappings":";;;;;;;;AAAE,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;;AAExC,QAAQ,CAAC,KAAK,CAAC;AACb,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;AACD,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;AACD,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;CACF,CAAC,CAAC,oE;;;;;;;;;;;ACxBH,OAAO,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;;AAEtC,OAAO,CAAC,KAAK,CAAC;AACZ,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;AACD,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;AACD,QAAM,oBAAG;AACP,QAAI,MAAM,CAAC,QAAQ,EAAE;AACnB,aAAO,IAAI,CAAC;KACb,MAAM;AACL,aAAO,KAAK,CAAC;KACd;GACF;CACF,CAAC,CAAC,oE;;;;;;;;;;;4BCxBkB,eAAe;;AAEtC,qBAAO,OAAO,CAAC,YAAM;;;AAGnB,MAAI,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;AACrD,SAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC9B,QAAI,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,eAAe,EAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC;AAChL,QAAG,CAAC,MAAM,EAAE;AACV,aAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACtB;GACF,CAAC,CAAC;;;AAGH,MAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;AACvD,UAAQ,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;AAC/B,QAAI,MAAM,GAAG,QAAQ,CAAC,OAAO,CAAC,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;AACpP,QAAG,CAAC,MAAM,EAAE;AACV,cAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KACvB;GACF,CAAC,CAAC;CAEJ,CAAC,CAAC,oE","file":"/app.js","sourcesContent":["  DcdcData = new Mongo.Collection(\"dcdc\");\n\n  DcdcData.allow({\n    insert() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    update() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    remove() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n","  DpsData = new Mongo.Collection(\"dps\");\n\n  DpsData.allow({\n    insert() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    update() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    remove() {\n      if (Meteor.isServer) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n  });\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n  //Insert pricing data from dcdc\n  var dpsJson = JSON.parse(Assets.getText(\"dps.json\"));\n  dpsJson.forEach(function (item) {\n    let exists = DpsData.findOne({ depo_cur: item.depo_cur, link_cur: item.link_cur, tenor: item.tenor, interest_rate: item.interest_rate, conversion_rate: item.conversion_rate });\n    if(!exists) {\n      DpsData.insert(item);\n    }\n  });\n\n  //Insert pricing data from dcdc\n  var dcdcJson = JSON.parse(Assets.getText(\"dcdc.json\"));\n  dcdcJson.forEach(function (item) {\n    let exists = DcdcData.findOne({ underlying: item.underlying, strike: item.strike, ko_type: item.ko_type, ko_barrier: item.ko_barrier, coupon_pa: item.coupon_pa, tenor: item.tenor, barrier_type: item.barrier_type, ki_barrier: item.ki_barrier });\n    if(!exists) {\n      DcdcData.insert(item);\n    }\n  });\n\n});\n"]}